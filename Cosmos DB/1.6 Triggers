⚡ Triggers in Azure Cosmos DB
Triggers are JavaScript functions that can run automatically before (pre-triggers) or after (post-triggers) a database operation (like creating or updating a document).

✅ Important: Triggers must be explicitly specified for the operation; they do not run automatically on every write/update.

⏳ Pre-triggers
Run before a database operation (e.g., document creation). Useful for:
- Validation
- Enriching data
- Adding default properties

📌 Example: Adding a timestamp if missing

function validateToDoItemTimestamp() {
    var context = getContext();
    var request = context.getRequest();
    var itemToCreate = request.getBody();

    if (!("timestamp" in itemToCreate)) {
        var ts = new Date();
        itemToCreate["timestamp"] = ts.getTime();
    }

    request.setBody(itemToCreate);
}

🔒 Notes:
- No input parameters allowed.
- Use request.getBody() and request.setBody() to read and modify the item.
- Specify TriggerOperation.Create during registration.

✅ Post-triggers
Run after a successful operation. Useful for:
- Updating metadata
- Logging
- Audit trails

📌 Example: Update a metadata document after item creation

function updateMetadata() {
    var context = getContext();
    var container = context.getCollection();
    var response = context.getResponse();

    var createdItem = response.getBody();

    var filterQuery = 'SELECT * FROM root r WHERE r.id = "_metadata"';
    var accept = container.queryDocuments(container.getSelfLink(), filterQuery, updateMetadataCallback);
    if (!accept) throw "Unable to update metadata, abort";

    function updateMetadataCallback(err, items, responseOptions) {
        if (err) throw new Error("Error" + err.message);
        if (items.length != 1) throw 'Unable to find metadata document';

        var metadataItem = items[0];
        metadataItem.createdItems += 1;
        metadataItem.createdNames += " " + createdItem.id;

        var accept = container.replaceDocument(metadataItem._self, metadataItem, function(err, itemReplaced) {
            if (err) throw "Unable to update metadata, abort";
        });

        if (!accept) throw "Unable to update metadata, abort";
    }
}

⚠️ Post-trigger failure rolls back the entire operation. It’s part of the same transaction.

🧮 User-Defined Functions (UDFs)
UDFs are custom JavaScript functions used inside queries for computations or logic.

📌 Example: Tax calculation UDF

function tax(income) {
    if (income == undefined)
        throw 'no input';

    if (income < 1000)
        return income * 0.1;
    else if (income < 10000)
        return income * 0.2;
    else
        return income * 0.4;
}

📊 You could use this UDF in a SQL-style query like:
SELECT c.name, udf.tax(c.income) AS taxAmount FROM c
