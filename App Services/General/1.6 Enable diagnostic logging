Types of Logs:
- Application Logging: captures log messages generated by your application code.​ Supported on both Windows and Linux.​ Can be stored in the App Service file system or Azure Storage blobs.​
- Web Server Logging: records raw HTTP request data in the W3C extended log file format.​ Available for Windows-based apps. Can be stored in the App Service file system or Azure Storage blobs.​
- Detailed Error Messages: saves copies of the .html error pages generated by your application.​ Available for Windows-based apps.​ Stored in the App Service file system.​
- Failed Request Tracing: provides detailed tracing information on failed requests, including the IIS components used and the time taken in each component.​ Available for Windows-based apps.​ Stored in the App Service file system.​
- Deployment logging: helps determine why a deployment failed. Deployment logging happens automatically and there are no configurable settings for deployment logging. For Windows and Linus apps. Stored in App Service file system.

Enabling Application Logging:

For Windows Apps:
- navigate to your app and select App Service logs.
- turn on Application Logging (Filesystem) for temporary debugging (automatically turns off after 12 hours) or Application Logging (Blob) for long-term logging.​
- set the Level of detail for the logs (e.g., Disabled, Error, Warning, Information, Verbose).​
- click Save.​

For Linux or Container Apps:
- in the Azure portal, go to your app and select App Service logs.​
- set Application Logging to File System.​
- specify the Quota (MB) for the logs and the Retention Period (Days).​
- click Save.​

Enabling Web Server Logging (Windows Only):
- in the Azure portal, navigate to your app and select App Service logs.​
- under Web server logging, choose Storage to store logs in Azure Storage blobs or File System to store them in the App Service file system.​
- set the Retention Period (Days) for the logs.​
- click Save.​

Adding Log Messages in Code:
For ASP.NET applications, you can use the System.Diagnostics.Trace class to log information. For example:​
  System.Diagnostics.Trace.TraceError("An error occurred.");
For Python applications, you can use the OpenCensus package to send logs to the application diagnostics log.​

Streaming Logs:
- Azure portal - To stream logs in the Azure portal, navigate to your app and select Log stream.
- Azure CLI - az webapp log tail --name appname --resource-group myResourceGroup
- local console - install Azure CLI and sign in to your account. Once signed in, follow the instructions shown for Azure CLI.

Access log files
- for Azure Storage blobs: Use a client tool that works with Azure Storage to access the logs.
- for App Service file system:
 - Linux/container apps: Download the ZIP file from https://<app-name>.scm.azurewebsites.net/api/logs/docker/zip.
 - Windows apps: Download the ZIP file from https://<app-name>.scm.azurewebsites.net/api/dump.

The ZIP file contains logs from the App Service file system or Docker containers (for containerized apps).
For scaled-out apps, logs from each instance are included. 
The log files are located in the /home/LogFiles directory on the App Service file system.
